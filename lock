#!/bin/bash

# Total timer in ms
start_t=$(expr $(date +%s%N) / 1000000)

# Local timer in ms
start=$(expr $(date +%s%N) / 1000000)

# define locker command
swaylock_cmd="swaylock"

FOLDER=`dirname "$BASH_SOURCE"`
ICON="$FOLDER/icons/lock.png"

# Remove temporary images on exit
set -o pipefail
trap 'rm -f "${images[*]}"' EXIT
set -o errexit -o noclobber -o nounset

# Need these to capture multiple monitors' screenshots
declare -a outputs
declare -a images

end=$(expr $(date +%s%N) / 1000000)
echo Time setup: `expr $end - $start` ms
start=$(expr $(date +%s%N) / 1000000)

# Parse the swaymsg json for outputs via jq and filter for active monitors
poutputs=$(swaymsg -t get_outputs | jq -r '.[]  | select(.active == true) | .name')
while read -r line; do
    outputs+=($line)
    images+=($(mktemp --suffix=.ppm))
done <<< "$poutputs"

end=$(expr $(date +%s%N) / 1000000)
echo Time display detect: `expr $end - $start` ms
start=$(expr $(date +%s%N) / 1000000)

swaylock_param="-f"
indicator_params=("--indicator-radius" "85")
output_params=""

output_count=${#outputs[@]}
for (( i=0; i<${output_count}; i++ ));
do

  # Take screenshot
  command -- "grim" -t ppm -o "${outputs[$i]}" "${images[$i]}"
    
  end=$(expr $(date +%s%N) / 1000000)
  echo Time grim for output "${outputs[$i]}": `expr $end - $start` ms
  start=$(expr $(date +%s%N) / 1000000)   
  
done


# Encrypt
python3 $FOLDER/encrypt.py -i "${images[@]}" -o "${images[@]}"
 
end=$(expr $(date +%s%N) / 1000000)
echo Time encrypt image from all outputs: `expr $end - $start` ms
start=$(expr $(date +%s%N) / 1000000)


for (( i=0; i<${output_count}; i++ ));
do
 
  # Pixelate and add lock icon
  convert "${images[$i]}[10%]" '-sample' '1000%' -level "10%,90%" "$ICON" -gravity center -composite "${images[$i]}"
  end=$(expr $(date +%s%N) / 1000000)
  echo Time convert image from output "${outputs[$i]}": `expr $end - $start` ms
  start=$(expr $(date +%s%N) / 1000000)

  # Append current image to swaylock params
  output_params+=("-i" "${outputs[$i]}:${images[$i]}" "-K")
    
done


end=$(expr $(date +%s%N) / 1000000)
echo Time total: `expr $end - $start_t` ms

# try to use swaylock with prepared parameters
if ! "${swaylock_cmd}" "${swaylock_param}" "${indicator_params[@]}" "${output_params[@]}" >/dev/null 2>&1; then
    # We have failed, lets get back to stock one
    "${swaylock_cmd[@]}"
fi



